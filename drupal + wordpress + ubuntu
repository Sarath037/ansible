$ cat main-ub.var
---
httpd_port: 80
httpd_domain: "wordpress.sarath.quest"
drupal_domain: "drupal.sarath.quest"
httpd_owner: "www-data"
httpd_group: "www-data"
packages:
  - apache2
  - mariadb-server
  - mariadb-client
  - php
  - php-mysql
  - python3-pip
  - unzip
mysql_root_passwd: "mysql@123"
mysql_extra_usr: "sarath"
mysql_extra_usr_passwd: "sarath@123"
mysql_user: "root"
mysql_extra_database: "saradb"
wp_url: "https://wordpress.org/latest.zip"
drupal_url: "https://www.drupal.org/download-latest/tar.gz"
[ec2-user@ip-172-31-37-105 ~]$
[ec2-user@ip-172-31-37-105 ~]$ cat wordpress-ubuntu.yml
---
- name: "Wordpress Installation"
  hosts: "ubuntu"
  become: true
  vars_files:
    - main-ub.var
  tasks:
    - name: "Lamp - Installing Apache and mariadb server"
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: true
      tags:
        - wordpress
        - drupal
    - name: "install pymsql"
      pip:
        name: pymysql
        state: present
      tags:
        - wordpress
        - drupal
    - name: "Lamp - Creating httpd.conf from template"
      template:
        src: port.conf.tmpl
        dest: /etc/apache2/ports.conf
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - wordpress
        - drupal
    - name: "Virtualhost Configuration File {{ httpd_domain }}"
      template:
        src: virtualhost.yml
        dest: /etc/apache2/sites-available/000-default.conf
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - wordpress
    - name: "Virtualhost Configuration File {{ drupal_domain }}"
      template:
        src: virtualhost-dru.yml
        dest: /etc/apache2/sites-available/000-default.conf
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - drupal
    - name: "Lamp - Creating Documentroot {{ httpd_domain }}"
      file:
        path: "/var/www/html/{{ httpd_domain }}"
        state: directory
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - wordpress
    - name: "Lamp - Creating Documentroot {{ drupal_domain }}"
      file:
        path: "/var/www/html/{{ drupal_domain }}"
        state: directory
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - drupal
    - name: "copying test page"
      copy:
        src: "{{ item }}"
        dest: /var/www/html/{{ httpd_domain }}
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      with_items:
        - test.php
        - test.html
      tags:
        - wordpress
    - name: "copying test page"
      copy:
        src: "{{ item }}"
        dest: /var/www/html/{{ drupal_domain }}
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      with_items:
        - test.php
        - test.html
      tags:
        - drupal
    - name: "Restart/enable mariadb"
      service:
        name: mariadb
        state: restarted
        enabled: true
      tags:
        - drupal
        - wordpress
    - name: "setting root password"
      mysql_user:
        user: "{{ mysql_user }}"
        password: "{{ mysql_root_passwd }}"
        host: "%"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags:
        - drupal
        - wordpress
    - name: "fetch root password"
      template:
        src: my.cnf.tml
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0600
      tags:
        - drupal
        - wordpress
    - name: "removing anonymous users"
      mysql_user:
        user: ""
        host_all: true
        state: absent
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags:
        - drupal
        - wordpress
    - name: "create data base"
      mysql_db:
        name: "{{ mysql_extra_database }}"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags:
        - drupal
        - wordpress
    - name: "removing test database"
      mysql_db:
        name: test
        state: absent
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags:
        - drupal
        - wordpress
    - name: "create extra user"
      mysql_user:
        user: "{{ mysql_extra_usr }}"
        password: "{{ mysql_extra_usr_passwd }}"
        priv: '{{ mysql_extra_database }}.*:ALL'
        host: "%"
        state: present
        login_unix_socket: /var/run/mysqld/mysqld.sock
      tags:
        - drupal
        - wordpress
    - name: "Downloading wordpress url"
      get_url:
        url: "{{ wp_url }}"
        dest: /tmp/latest.zip
      tags:
        - wordpress
    - name: "extracting"
      unarchive:
        src: /tmp/latest.zip
        dest: /tmp/
        remote_src: true
      tags:
        - wordpress
    - name: "copying files to document root"
      copy:
        src: /tmp/wordpress/
        dest: /var/www/html/{{ httpd_domain }}
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
        remote_src: true
      tags:
        - wordpress
    - name: "create wp-config"
      template:
        src: wp-conf.yml
        dest: /var/www/html/{{ httpd_domain }}/wp-config.php
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
      tags:
        - wordpress
    - name: "post installation cleanup"
      file:
        path: "{{ item }}"
        dest: /tmp/
      with_items:
        - "/tmp/wordpress/"
        - "/tmp/latest.zip"
      tags:
        - wordpress
    - name: "Downloading drupal url"
      get_url:
        url: "{{ drupal_url }}"
        dest: /tmp/tar.gz
      tags:
        - drupal
    - name: "extracting"
      unarchive:
        src: /tmp/tar.gz
        dest: /tmp/
        remote_src: true
      tags:
        - drupal
    - name: "copying files to document root"
      copy:
        src: /tmp/drupal-9.4.8/
        dest: /var/www/html/{{ drupal_domain }}
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
        remote_src: true
      tags:
        - drupal
    - name: "create settings.php"
      copy:
        src: /var/www/html/{{ drupal_domain }}/sites/default/default.settings.php
        dest: /var/www/html/{{ drupal_domain }}/sites/default/settings.php
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
        remote_src: true
      tags:
        - drupal
    - name: "creating service.yml"
      copy:
        src: /var/www/html/{{ drupal_domain }}/sites/default/default.services.yml
        dest: /var/www/html/{{ drupal_domain }}/sites/default/services.yml
        owner: "{{ httpd_owner }}"
        group: "{{ httpd_group }}"
        remote_src: true
      tags:
        - drupal
    - name: "post installation restart"
      service:
        name: "{{ item }}"
        state: restarted
        enabled: true
      with_items:
        - "mariadb"
        - "apache2"
      tags:
        - drupal
        - wordpress
    - name: "post installation cleanup"
      file:
        path: "{{ item }}"
        dest: /tmp/
      with_items:
        - "/tmp/drupal-9.4.8"
        - "/tmp/tar.gz"
      tags:
        - drupal
